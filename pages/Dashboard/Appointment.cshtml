@model BloodBridge.Models.Appointment

@{
    ViewData["Title"] = "Appointment";
    var userName = User.Identity?.Name ?? "Guest";
}

<!DOCTYPE html>
<html lang="en">
<head>
       <!-- üîç Metadata -->
    <meta name="description" content="BloodBridge connects blood donors and recipients efficiently across Ghana." />
    <meta name="author" content="Richard Boakye Yiadom" />
    <meta name="theme-color" content="#b30000" />

    <!-- üß† Favicon -->
    <link rel="icon" href="~/images/favicon.ico" type="image/x-icon" />

    <!-- üé® Stylesheets -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/layout.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/Chartforum.css" asp-append-version="true" />

    <!-- ‚ö° External Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/feather-icons"></script>

    <!-- üí° Custom Scripts -->
    <script src="~/js/site.js" asp-append-version="true"></script>
</head>

<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <h2 class="text-center text-danger">Schedule an Appointment</h2>

                <!-- ‚úÖ Success & Error Messages -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success fade show text-center" role="alert">
                        @TempData["SuccessMessage"]
                    </div>
                }
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger fade show text-center" role="alert">
                        @TempData["ErrorMessage"]
                    </div>
                }

                <!-- ‚úÖ Appointment Form -->
                <form id="appointmentForm" method="post">
                    @Html.AntiForgeryToken()

                    <!-- ‚úÖ Select Date & Time -->
                    <div class="mb-3">
                        <label for="appointmentDate" class="form-label">Select Date & Time</label>
                        <input type="datetime-local" class="form-control" id="appointmentDate" name="AppointmentDate" required />
                        <span id="dateError" class="text-danger d-none">‚ö†Ô∏è Please select a valid date and time.</span>
                    </div>

                    <!-- ‚úÖ Select Blood Type (Enum-Based) -->
                    <div class="mb-3">
                     <label for="bloodType" class="form-label">Select Blood Type</label>
                    <select class="form-select" id="bloodType" name="BloodType" required>
                    <option value="">-- Choose Blood Type --</option>
                    @foreach (var bloodType in Appointment.BloodGroupList)
                    {
                        <option value="@bloodType.Value">@bloodType.Text</option>
                    }
                        </select>
                    </div>

                    <!-- ‚úÖ Select Hospital -->
                    <div class="mb-3">
                <label for="hospitalId" class="form-label fw-bold">Select Hospital</label>
                <select class="form-select" id="hospitalId" name="HospitalId" required>
                        <option value="" selected disabled>-- Choose Hospital --</option>
                     @foreach (var hospital in Appointment.HospitalList) 
                             {
                        <option value="@hospital.Value">@hospital.Text</option>
                             }
                </select>
                 <span id="hospitalError" class="text-danger d-none">‚ö†Ô∏è Hospital selection is required.</span>
                </div>

                    <!-- ‚úÖ Preview Appointment -->
                    <button type="button" class="btn btn-danger w-100 py-2" data-bs-toggle="modal" data-bs-target="#appointmentSummary">
                        Preview Appointment
                    </button>

                    <!-- ‚úÖ Confirmation Modal -->
                    <div class="modal fade" id="appointmentSummary" tabindex="-1">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Confirm Appointment</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    <p><strong>Date & Time:</strong> <span id="summaryDate"></span></p>
                                    <p><strong>Blood Type:</strong> <span id="summaryBloodType"></span></p>
                                    <p><strong>Hospital:</strong> <span id="summaryHospital"></span></p>
                                </div>
                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-primary w-100">Confirm Appointment</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>

                <!-- ‚úÖ Reschedule & Cancel Options -->
                <div class="text-center mt-4">
                    <button class="btn btn-outline-danger" id="rescheduleBtn">Reschedule</button>
                    <button class="btn btn-outline-secondary" id="cancelBtn">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("appointmentForm");
            const appointmentDate = document.getElementById("appointmentDate");
            const hospitalId = document.getElementById("hospitalId");
            const bloodType = document.getElementById("bloodType");

            const dateError = document.getElementById("dateError");
            const hospitalError = document.getElementById("hospitalError");

            // ‚úÖ Validate appointment form fields
            function validateForm(event) {
                let hasErrors = false;

                if (!appointmentDate.value) {
                    dateError.classList.remove("d-none");
                    hasErrors = true;
                } else {
                    dateError.classList.add("d-none");
                }

                if (!hospitalId.value.trim()) {
                    hospitalError.classList.remove("d-none");
                    hasErrors = true;
                } else {
                    hospitalError.classList.add("d-none");
                }

                if (hasErrors) {
                    event.preventDefault();
                }
            }

            form.addEventListener("submit", validateForm);

            // ‚úÖ Fetch available hospitals dynamically
            fetch('/GetHospitals')
                .then(response => response.json())
                .then(data => {
                    hospitalId.innerHTML = '<option value="">-- Choose Hospital --</option>';
                    data.forEach(hospital => {
                        hospitalId.innerHTML += `<option value="${hospital.id}">${hospital.name} - ${hospital.location}</option>`;
                    });
                });

            // ‚úÖ Update summary when user fills inputs
            appointmentDate.addEventListener("change", () => document.getElementById("summaryDate").textContent = appointmentDate.value);
            bloodType.addEventListener("change", () => document.getElementById("summaryBloodType").textContent = bloodType.value);
            hospitalId.addEventListener("change", () => document.getElementById("summaryHospital").textContent = hospitalId.options[hospitalId.selectedIndex].text);
        });
    </script>

</body>
</html>

